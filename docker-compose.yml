# Używamy stabilnej wersji składni Docker Compose
version: "3.9"

services:
  # Definicja serwisu dla aplikacji
  app:
    # Obraz zostanie pobrany z GitHub Container Registry
    # Tag jest przekazywany przez zmienną środowiskową TAG, domyślnie 'latest'
    image: ghcr.io/yulian911/fiszki:${TAG:-latest}

    # Nazwa kontenera, która będzie widoczna w systemie Docker
    container_name: fiszki-container

    # Polityka restartu kontenera
    # 'unless-stopped' - restartuje kontener zawsze, chyba że został jawnie zatrzymany
    restart: unless-stopped

    # Zmienne środowiskowe przekazywane do kontenera w czasie uruchomienia.
    # Wartości zostaną pobrane ze zmiennych środowiskowych serwera (self-hosted runnera)
    # podczas wykonywania komendy `docker-compose up`.
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}

    # Przekierowanie portów [PORT_HOSTA:PORT_KONTENERA]
    ports:
      - "40310:40310"

    # Definicja Healthcheck, spójna z tą w Dockerfile.
    # Docker Compose będzie monitorować stan aplikacji.
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:40310/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
